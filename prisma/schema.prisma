// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
  }

model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  role      UserRole   @default(USER)
  email     String     @unique
  password  String
  colorScheme     String        @default("theme-orange")
  avatarUrl String?
  orders   Order[]
  createdAt DateTime   @default(now())
  updatedAt       DateTime @updatedAt
  
}


model Product {
  id                       String @id @default(auto()) @map("_id") @db.ObjectId
  name                     String
  description              String
  priceInCents             Int
  filePath                 String?         
  imagePath                String?
  isAvailableForPurchase   Boolean    @default(true)
  createdAt                DateTime   @default(now())
  updatedAt                DateTime   @updatedAt
  orders                   Order[]
  downloadVerifications    DownloadVerification[]
 
}



model Order {
  id                       String @id @default(auto()) @map("_id") @db.ObjectId
  pricePaidInCents         Int
  createdAt                DateTime   @default(now())
  updatedAt                DateTime   @updatedAt
  userId                   String   @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId                String   @db.ObjectId
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)


}

model DownloadVerification {
  id                       String @id @default(auto()) @map("_id") @db.ObjectId
  expiresAt                DateTime
  createdAt                DateTime   @default(now())
  productId                String   @db.ObjectId
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}
